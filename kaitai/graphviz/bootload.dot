digraph {
	rankdir=LR;
	node [shape=plaintext];
	subgraph cluster__bootload {
		label="Bootload";
		graph[style=dotted];

		bootload__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
		</TABLE>>];
		subgraph cluster__msg_nap_device_dna_req {
			label="Bootload::MsgNapDeviceDnaReq";
			graph[style=dotted];

			msg_nap_device_dna_req__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
			</TABLE>>];
		}
		subgraph cluster__msg_bootloader_jump_to_app {
			label="Bootload::MsgBootloaderJumpToApp";
			graph[style=dotted];

			msg_bootloader_jump_to_app__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
				<TR><TD PORT="jump_pos">0</TD><TD PORT="jump_size">1</TD><TD>u1</TD><TD PORT="jump_type">jump</TD></TR>
			</TABLE>>];
		}
		subgraph cluster__msg_bootloader_handshake_resp {
			label="Bootload::MsgBootloaderHandshakeResp";
			graph[style=dotted];

			msg_bootloader_handshake_resp__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
				<TR><TD PORT="flags_pos">0</TD><TD PORT="flags_size">4</TD><TD>u4le</TD><TD PORT="flags_type">flags</TD></TR>
				<TR><TD PORT="version_pos">4</TD><TD PORT="version_size">â‡²</TD><TD>str(ascii)</TD><TD PORT="version_type">version</TD></TR>
			</TABLE>>];
		}
		subgraph cluster__msg_nap_device_dna_resp {
			label="Bootload::MsgNapDeviceDnaResp";
			graph[style=dotted];

			msg_nap_device_dna_resp__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
				<TR><TD PORT="dna_pos">0</TD><TD PORT="dna_size">1</TD><TD>u1</TD><TD PORT="dna_type">dna</TD></TR>
				<TR><TD COLSPAN="4" PORT="dna__repeat">repeat 8 times</TD></TR>
			</TABLE>>];
		}
		subgraph cluster__msg_bootloader_handshake_req {
			label="Bootload::MsgBootloaderHandshakeReq";
			graph[style=dotted];

			msg_bootloader_handshake_req__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
			</TABLE>>];
		}
		subgraph cluster__msg_bootloader_handshake_dep_a {
			label="Bootload::MsgBootloaderHandshakeDepA";
			graph[style=dotted];

			msg_bootloader_handshake_dep_a__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
				<TR><TD PORT="handshake_pos">0</TD><TD PORT="handshake_size">1</TD><TD>u1</TD><TD PORT="handshake_type">handshake</TD></TR>
				<TR><TD COLSPAN="4" PORT="handshake__repeat">repeat to end of stream</TD></TR>
			</TABLE>>];
		}
	}
}
