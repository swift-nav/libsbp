// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

import "github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"

type Acquisition struct {
	_io *kaitai.Stream
	_root *Acquisition
	_parent interface{}
}
func NewAcquisition() *Acquisition {
	return &Acquisition{
	}
}

func (this *Acquisition) Read(io *kaitai.Stream, parent interface{}, root *Acquisition) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	return err
}

/**
 * Deprecated.
 */
type Acquisition_MsgAcqResultDepC struct {
	Cn0 float32
	Cp float32
	Cf float32
	Sid *Gnss_GnssSignalDep
	_io *kaitai.Stream
	_root *Acquisition
	_parent *Sbp_SbpMessage
}
func NewAcquisition_MsgAcqResultDepC() *Acquisition_MsgAcqResultDepC {
	return &Acquisition_MsgAcqResultDepC{
	}
}

func (this *Acquisition_MsgAcqResultDepC) Read(io *kaitai.Stream, parent *Sbp_SbpMessage, root *Acquisition) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Cn0 = float32(tmp1)
	tmp2, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Cp = float32(tmp2)
	tmp3, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Cf = float32(tmp3)
	tmp4 := NewGnss_GnssSignalDep()
	err = tmp4.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Sid = tmp4
	return err
}

/**
 * CN/0 of best point
 */

/**
 * Code phase of best point
 */

/**
 * Carrier frequency of best point
 */

/**
 * GNSS signal for which acquisition was attempted
 */

/**
 * Deprecated.
 */
type Acquisition_MsgAcqResultDepB struct {
	Snr float32
	Cp float32
	Cf float32
	Sid *Gnss_GnssSignalDep
	_io *kaitai.Stream
	_root *Acquisition
	_parent *Sbp_SbpMessage
}
func NewAcquisition_MsgAcqResultDepB() *Acquisition_MsgAcqResultDepB {
	return &Acquisition_MsgAcqResultDepB{
	}
}

func (this *Acquisition_MsgAcqResultDepB) Read(io *kaitai.Stream, parent *Sbp_SbpMessage, root *Acquisition) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp5, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Snr = float32(tmp5)
	tmp6, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Cp = float32(tmp6)
	tmp7, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Cf = float32(tmp7)
	tmp8 := NewGnss_GnssSignalDep()
	err = tmp8.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Sid = tmp8
	return err
}

/**
 * SNR of best point. Currently in arbitrary SNR points, but will be in
 * units of dB Hz in a later revision of this message.
 */

/**
 * Code phase of best point
 */

/**
 * Carrier frequency of best point
 */

/**
 * GNSS signal for which acquisition was attempted
 */

/**
 * Profile for a specific SV for debugging purposes. The message describes
 * SV profile during acquisition time. The message is used to debug and
 * measure the performance.
 */
type Acquisition_AcqSvProfile struct {
	JobType uint8
	Status uint8
	Cn0 uint16
	IntTime uint8
	Sid *Gnss_GnssSignal
	BinWidth uint16
	Timestamp uint32
	TimeSpent uint32
	CfMin int32
	CfMax int32
	Cf int32
	Cp uint32
	_io *kaitai.Stream
	_root *Acquisition
	_parent *Acquisition_MsgAcqSvProfile
}
func NewAcquisition_AcqSvProfile() *Acquisition_AcqSvProfile {
	return &Acquisition_AcqSvProfile{
	}
}

func (this *Acquisition_AcqSvProfile) Read(io *kaitai.Stream, parent *Acquisition_MsgAcqSvProfile, root *Acquisition) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp9, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.JobType = tmp9
	tmp10, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Status = tmp10
	tmp11, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.Cn0 = uint16(tmp11)
	tmp12, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.IntTime = tmp12
	tmp13 := NewGnss_GnssSignal()
	err = tmp13.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Sid = tmp13
	tmp14, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.BinWidth = uint16(tmp14)
	tmp15, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Timestamp = uint32(tmp15)
	tmp16, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.TimeSpent = uint32(tmp16)
	tmp17, err := this._io.ReadS4le()
	if err != nil {
		return err
	}
	this.CfMin = int32(tmp17)
	tmp18, err := this._io.ReadS4le()
	if err != nil {
		return err
	}
	this.CfMax = int32(tmp18)
	tmp19, err := this._io.ReadS4le()
	if err != nil {
		return err
	}
	this.Cf = int32(tmp19)
	tmp20, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Cp = uint32(tmp20)
	return err
}

/**
 * SV search job type (deep, fallback, etc)
 */

/**
 * Acquisition status 1 is Success, 0 is Failure
 */

/**
 * CN0 value. Only valid if status is '1'
 */

/**
 * Acquisition integration time
 */

/**
 * GNSS signal for which acquisition was attempted
 */

/**
 * Acq frequency bin width
 */

/**
 * Timestamp of the job complete event
 */

/**
 * Time spent to search for sid.code
 */

/**
 * Doppler range lowest frequency
 */

/**
 * Doppler range highest frequency
 */

/**
 * Doppler value of detected peak. Only valid if status is '1'
 */

/**
 * Codephase of detected peak. Only valid if status is '1'
 */

/**
 * The message describes all SV profiles during acquisition time. The
 * message is used to debug and measure the performance.
 */
type Acquisition_MsgAcqSvProfile struct {
	AcqSvProfile []*Acquisition_AcqSvProfile
	_io *kaitai.Stream
	_root *Acquisition
	_parent *Sbp_SbpMessage
}
func NewAcquisition_MsgAcqSvProfile() *Acquisition_MsgAcqSvProfile {
	return &Acquisition_MsgAcqSvProfile{
	}
}

func (this *Acquisition_MsgAcqSvProfile) Read(io *kaitai.Stream, parent *Sbp_SbpMessage, root *Acquisition) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	for i := 1;; i++ {
		tmp21, err := this._io.EOF()
		if err != nil {
			return err
		}
		if tmp21 {
			break
		}
		tmp22 := NewAcquisition_AcqSvProfile()
		err = tmp22.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.AcqSvProfile = append(this.AcqSvProfile, tmp22)
	}
	return err
}

/**
 * SV profiles during acquisition time
 */

/**
 * Deprecated.
 */
type Acquisition_AcqSvProfileDep struct {
	JobType uint8
	Status uint8
	Cn0 uint16
	IntTime uint8
	Sid *Gnss_GnssSignalDep
	BinWidth uint16
	Timestamp uint32
	TimeSpent uint32
	CfMin int32
	CfMax int32
	Cf int32
	Cp uint32
	_io *kaitai.Stream
	_root *Acquisition
	_parent *Acquisition_MsgAcqSvProfileDep
}
func NewAcquisition_AcqSvProfileDep() *Acquisition_AcqSvProfileDep {
	return &Acquisition_AcqSvProfileDep{
	}
}

func (this *Acquisition_AcqSvProfileDep) Read(io *kaitai.Stream, parent *Acquisition_MsgAcqSvProfileDep, root *Acquisition) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp23, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.JobType = tmp23
	tmp24, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Status = tmp24
	tmp25, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.Cn0 = uint16(tmp25)
	tmp26, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.IntTime = tmp26
	tmp27 := NewGnss_GnssSignalDep()
	err = tmp27.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Sid = tmp27
	tmp28, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.BinWidth = uint16(tmp28)
	tmp29, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Timestamp = uint32(tmp29)
	tmp30, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.TimeSpent = uint32(tmp30)
	tmp31, err := this._io.ReadS4le()
	if err != nil {
		return err
	}
	this.CfMin = int32(tmp31)
	tmp32, err := this._io.ReadS4le()
	if err != nil {
		return err
	}
	this.CfMax = int32(tmp32)
	tmp33, err := this._io.ReadS4le()
	if err != nil {
		return err
	}
	this.Cf = int32(tmp33)
	tmp34, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Cp = uint32(tmp34)
	return err
}

/**
 * SV search job type (deep, fallback, etc)
 */

/**
 * Acquisition status 1 is Success, 0 is Failure
 */

/**
 * CN0 value. Only valid if status is '1'
 */

/**
 * Acquisition integration time
 */

/**
 * GNSS signal for which acquisition was attempted
 */

/**
 * Acq frequency bin width
 */

/**
 * Timestamp of the job complete event
 */

/**
 * Time spent to search for sid.code
 */

/**
 * Doppler range lowest frequency
 */

/**
 * Doppler range highest frequency
 */

/**
 * Doppler value of detected peak. Only valid if status is '1'
 */

/**
 * Codephase of detected peak. Only valid if status is '1'
 */

/**
 * This message describes the results from an attempted GPS signal
 * acquisition search for a satellite PRN over a code phase/carrier
 * frequency range. It contains the parameters of the point in the
 * acquisition search space with the best carrier-to-noise (CN/0) ratio.
 */
type Acquisition_MsgAcqResult struct {
	Cn0 float32
	Cp float32
	Cf float32
	Sid *Gnss_GnssSignal
	_io *kaitai.Stream
	_root *Acquisition
	_parent *Sbp_SbpMessage
}
func NewAcquisition_MsgAcqResult() *Acquisition_MsgAcqResult {
	return &Acquisition_MsgAcqResult{
	}
}

func (this *Acquisition_MsgAcqResult) Read(io *kaitai.Stream, parent *Sbp_SbpMessage, root *Acquisition) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp35, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Cn0 = float32(tmp35)
	tmp36, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Cp = float32(tmp36)
	tmp37, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Cf = float32(tmp37)
	tmp38 := NewGnss_GnssSignal()
	err = tmp38.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Sid = tmp38
	return err
}

/**
 * CN/0 of best point
 */

/**
 * Code phase of best point
 */

/**
 * Carrier frequency of best point
 */

/**
 * GNSS signal for which acquisition was attempted
 */

/**
 * Deprecated.
 */
type Acquisition_MsgAcqResultDepA struct {
	Snr float32
	Cp float32
	Cf float32
	Prn uint8
	_io *kaitai.Stream
	_root *Acquisition
	_parent *Sbp_SbpMessage
}
func NewAcquisition_MsgAcqResultDepA() *Acquisition_MsgAcqResultDepA {
	return &Acquisition_MsgAcqResultDepA{
	}
}

func (this *Acquisition_MsgAcqResultDepA) Read(io *kaitai.Stream, parent *Sbp_SbpMessage, root *Acquisition) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp39, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Snr = float32(tmp39)
	tmp40, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Cp = float32(tmp40)
	tmp41, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Cf = float32(tmp41)
	tmp42, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Prn = tmp42
	return err
}

/**
 * SNR of best point. Currently dimensionless, but will have units of
 * dB Hz in the revision of this message.
 */

/**
 * Code phase of best point
 */

/**
 * Carrier frequency of best point
 */

/**
 * PRN-1 identifier of the satellite signal for which acquisition was
 * attempted
 */

/**
 * Deprecated.
 */
type Acquisition_MsgAcqSvProfileDep struct {
	AcqSvProfile []*Acquisition_AcqSvProfileDep
	_io *kaitai.Stream
	_root *Acquisition
	_parent *Sbp_SbpMessage
}
func NewAcquisition_MsgAcqSvProfileDep() *Acquisition_MsgAcqSvProfileDep {
	return &Acquisition_MsgAcqSvProfileDep{
	}
}

func (this *Acquisition_MsgAcqSvProfileDep) Read(io *kaitai.Stream, parent *Sbp_SbpMessage, root *Acquisition) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	for i := 1;; i++ {
		tmp43, err := this._io.EOF()
		if err != nil {
			return err
		}
		if tmp43 {
			break
		}
		tmp44 := NewAcquisition_AcqSvProfileDep()
		err = tmp44.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.AcqSvProfile = append(this.AcqSvProfile, tmp44)
	}
	return err
}

/**
 * SV profiles during acquisition time
 */
