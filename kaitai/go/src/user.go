// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

import "github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"

type User struct {
	_io *kaitai.Stream
	_root *User
	_parent interface{}
}
func NewUser() *User {
	return &User{
	}
}

func (this *User) Read(io *kaitai.Stream, parent interface{}, root *User) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	return err
}

/**
 * This message can contain any application specific user data up to a
 * maximum length of 255 bytes per message.
 */
type User_MsgUserData struct {
	Contents []uint8
	_io *kaitai.Stream
	_root *User
	_parent *Sbp_Message
}
func NewUser_MsgUserData() *User_MsgUserData {
	return &User_MsgUserData{
	}
}

func (this *User_MsgUserData) Read(io *kaitai.Stream, parent *Sbp_Message, root *User) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	for i := 1;; i++ {
		tmp1, err := this._io.EOF()
		if err != nil {
			return err
		}
		if tmp1 {
			break
		}
		tmp2, err := this._io.ReadU1()
		if err != nil {
			return err
		}
		this.Contents = append(this.Contents, tmp2)
	}
	return err
}

/**
 * User data payload
 */
