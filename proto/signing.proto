/*
 * Copyright (C) 2021 Swift Navigation Inc.
 * Contact: https://support.swiftnav.com
 *
 * This source is subject to the license found in the file 'LICENSE' which must
 * be distributed together with this source. All other rights reserved.
 *
 * THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 */

syntax = "proto3";

/** Signing
 *
 * Messages relating to signatures
 */

package swiftnav.sbp.signing;


/** UTC Time
 *
None
 */
message UtcTime {
    uint32 year = 1;
    uint32 month = 2;
    uint32 day = 3;
    uint32 hours = 4;
    uint32 minutes = 5;
    uint32 seconds = 6;
    uint32 ns = 7;
}

/** ECDSA signature
 *
None
 */
message ECDSASignature {
    uint32 len = 1;
    repeated uint32 data = 2;
}

/** An ECDSA certificate split over multiple messages
 *
 * A DER encoded x.509 ECDSA-256 certificate (using curve secp256r1).
 */
message MsgEcdsaCertificate {
    uint32 n_msg = 1;
    repeated uint32 certificate_id = 2;
    uint32 flags = 3;
    repeated uint32 certificate_bytes = 4;
}

/** The certificate chain
 *
None
 */
message MsgCertificateChain {
    repeated uint32 root_certificate = 1;
    repeated uint32 intermediate_certificate = 2;
    repeated uint32 corrections_certificate = 3;
    UtcTime expiration = 4;
    ECDSASignature signature = 5;
}

/** AES-CMAC 128 digital signature
 *
 * Digital signature using AES-CMAC 128 algorithm used for data integrity.
 */
message MsgAesCmacSignature {
    uint32 stream_counter = 1;
    uint32 on_demand_counter = 2;
    repeated uint32 certificate_id = 3;
    repeated uint32 signature = 4;
    uint32 flags = 5;
    repeated uint32 signed_messages = 6;
}

/** An ECDSA signature
 *
 * An ECDSA-256 signature using SHA-256 as the message digest algorithm.
 */
message MsgEcdsaSignature {
    uint32 flags = 1;
    uint32 stream_counter = 2;
    uint32 on_demand_counter = 3;
    repeated uint32 certificate_id = 4;
    ECDSASignature signature = 5;
    repeated uint32 signed_messages = 6;
}