/*
 * Copyright (C) 2021 Swift Navigation Inc.
 * Contact: https://support.swiftnav.com
 *
 * This source is subject to the license found in the file 'LICENSE' which must
 * be be distributed together with this source. All other rights reserved.
 *
 * THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 */

syntax = "proto3";

/** Ssr
 *
 * Precise State Space Representation (SSR) corrections format
 */

package swiftnav.sbp.ssr;

import "gnss.proto";

/** SSR code biases corrections for a particular satellite
 *
 * Code biases are to be added to pseudorange. The corrections conform with
 * RTCMv3 MT 1059 / 1065.
 */
message CodeBiasesContent {
    uint32 code = 1;
    sint32 value = 2;
}

/** SSR phase biases corrections for a particular satellite
 *
 * Phase biases are to be added to carrier phase measurements.
 */
message PhaseBiasesContent {
    uint32 code = 1;
    uint32 integer_indicator = 2;
    uint32 widelane_integer_indicator = 3;
    uint32 discontinuity_counter = 4;
    sint32 bias = 5;
}

/** Header for the MSG_SSR_STEC_CORRECTION message
 *
 * A full set of STEC information will likely span multiple SBP messages,
 * since SBP message a limited to 255 bytes.  The header is used to tie
 * multiple SBP messages into a sequence.
 */
message STECHeader {
    uint32 tile_set_id = 1;
    uint32 tile_id = 2;
    gnss.GpsTimeSec time = 3;
    uint32 num_msgs = 4;
    uint32 seq_num = 5;
    uint32 update_interval = 6;
    uint32 iod_atmo = 7;
}

/** Header for the MSG_SSR_GRIDDED_CORRECTION message
 *
 * The LPP message contains nested variable length arrays which are not
 * supported in SBP, so each grid point will be identified by the index.
 */
message GriddedCorrectionHeader {
    uint32 tile_set_id = 1;
    uint32 tile_id = 2;
    gnss.GpsTimeSec time = 3;
    uint32 num_msgs = 4;
    uint32 seq_num = 5;
    uint32 update_interval = 6;
    uint32 iod_atmo = 7;
    uint32 tropo_quality_indicator = 8;
}

/** None
 *
 * STEC polynomial for the given satellite.
 */
message STECSatElement {
    SvId sv_id = 1;
    uint32 stec_quality_indicator = 2;
    repeated sint32 stec_coeff = 3;
}

/** None
 *
 * Troposphere vertical delays at the grid point.
 */
message TroposphericDelayCorrectionNoStd {
    sint32 hydro = 1;
    sint32 wet = 2;
}

/** None
 *
 * Troposphere vertical delays (mean and standard deviation) at the grid
 * point.
 */
message TroposphericDelayCorrection {
    sint32 hydro = 1;
    sint32 wet = 2;
    uint32 stddev = 3;
}

/** None
 *
 * STEC residual for the given satellite at the grid point.
 */
message STECResidualNoStd {
    SvId sv_id = 1;
    sint32 residual = 2;
}

/** None
 *
 * STEC residual (mean and standard deviation) for the given satellite at the
 * grid point.
 */
message STECResidual {
    SvId sv_id = 1;
    sint32 residual = 2;
    uint32 stddev = 3;
}

/** Precise orbit and clock correction
 *
 * The precise orbit and clock correction message is to be applied as a delta
 * correction to broadcast ephemeris and is an equivalent to the 1060 /1066
 * RTCM message types.
 */
message MsgSsrOrbitClock {
    gnss.GpsTimeSec time = 1;
    gnss.GnssSignal sid = 2;
    uint32 update_interval = 3;
    uint32 iod_ssr = 4;
    uint32 iod = 5;
    sint32 radial = 6;
    sint32 along = 7;
    sint32 cross = 8;
    sint32 dot_radial = 9;
    sint32 dot_along = 10;
    sint32 dot_cross = 11;
    sint32 c0 = 12;
    sint32 c1 = 13;
    sint32 c2 = 14;
}

/** Precise code biases correction
 *
 * The precise code biases message is to be added to the pseudorange of the
 * corresponding signal to get corrected pseudorange. It is an equivalent to
 * the 1059 / 1065 RTCM message types.
 */
message MsgSsrCodeBiases {
    gnss.GpsTimeSec time = 1;
    gnss.GnssSignal sid = 2;
    uint32 update_interval = 3;
    uint32 iod_ssr = 4;
    repeated CodeBiasesContent biases = 5;
}

/** Precise phase biases correction
 *
 * The precise phase biases message contains the biases to be added to the
 * carrier phase of the corresponding signal to get corrected carrier phase
 * measurement, as well as the satellite yaw angle to be applied to compute
 * the phase wind-up correction. It is typically an equivalent to the 1265
 * RTCM message types.
 */
message MsgSsrPhaseBiases {
    gnss.GpsTimeSec time = 1;
    gnss.GnssSignal sid = 2;
    uint32 update_interval = 3;
    uint32 iod_ssr = 4;
    uint32 dispersive_bias = 5;
    uint32 mw_consistency = 6;
    uint32 yaw = 7;
    sint32 yaw_rate = 8;
    repeated PhaseBiasesContent biases = 9;
}

/** STEC correction polynomial coefficients
 *
None
 */
message MsgSsrStecCorrection {
    repeated uint32 stub = 1;
}

/** Gridded troposphere and STEC correction residuals
 *
 * STEC residuals are per space vehicle, troposphere is not.
 *
 * It is typically equivalent to the QZSS CLAS Sub Type 9 messages.
 */
message MsgSsrGriddedCorrection {
    GriddedCorrectionHeader header = 1;
    uint32 index = 2;
    TroposphericDelayCorrection tropo_delay_correction = 3;
    repeated STECResidual stec_residuals = 4;
}

/** Gridded troposhere and STEC correction residuals bounds
 *
None
 */
message MsgSsrGriddedCorrectionBounds {
    repeated uint32 stub = 1;
}

/** Definition of a SSR atmospheric correction tile.

 *
 * Provides the correction point coordinates for the atmospheric correction
 * values in the MSG_SSR_STEC_CORRECTION and MSG_SSR_GRIDDED_CORRECTION
 * messages.
 *
 * Based on ETSI TS 137 355 V16.1.0 (LTE Positioning Protocol) information
 * element GNSS-SSR-CorrectionPoints. SBP only supports gridded arrays of
 * correction points, not lists of points.
 */
message MsgSsrTileDefinition {
    repeated uint32 stub = 1;
}

/** Antenna phase center correction
 *
 * Contains phase center offset and elevation variation corrections for one
 * signal on a satellite.
 */
message SatelliteAPC {
    gnss.GnssSignal sid = 1;
    uint32 sat_info = 2;
    uint32 svn = 3;
    repeated sint32 pco = 4;
    repeated sint32 pcv = 5;
}

/** Satellite antenna phase center corrections
 *
None
 */
message MsgSsrSatelliteApc {
    repeated SatelliteAPC apc = 1;
}

/** Stubbed version of Combined Orbit and Clock Bound
 *
None
 */
message MsgSsrOrbitClockBounds {
    repeated uint32 stub = 1;
}

/** Stubbed version of Combined Code and Phase Biases Bounds
 *
None
 */
message MsgSsrCodePhaseBiasesBounds {
    repeated uint32 stub = 1;
}

/** Combined Orbit and Clock Bound Degradation Parameter
 *
None
 */
message MsgSsrOrbitClockBoundsDegradation {
    repeated uint32 stub = 1;
}