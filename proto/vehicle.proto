/*
 * Copyright (C) 2021 Swift Navigation Inc.
 * Contact: https://support.swiftnav.com
 *
 * This source is subject to the license found in the file 'LICENSE' which must
 * be be distributed together with this source. All other rights reserved.
 *
 * THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
 */

syntax = "proto3";

/** Vehicle
 *
 * Messages from a vehicle.
 */

package swiftnav.sbp.vehicle;


/** Vehicle forward (x-axis) velocity
 *
 * Message representing the x component of vehicle velocity in the user frame
 * at the odometry reference point(s) specified by the user. The offset for
 * the odometry reference point and the definition and origin of the user
 * frame are defined through the device settings interface. There are 4
 * possible user-defined sources of this message which are labeled arbitrarily
 * source 0 through 3. If using "processor time" time tags, the receiving end
 * will expect a `MSG_GNSS_TIME_OFFSET` when a PVT fix becomes available to
 * synchronise odometry measurements with GNSS. Processor time shall roll over
 * to zero after one week.
 */
message MsgOdometry {
    uint32 tow = 1;
    sint32 velocity = 2;
    uint32 flags = 3;
}

/** Accumulated wheeltick count message
 *
 * Message containing the accumulated distance travelled by a wheel located at
 * an odometry reference point defined by the user. The offset for the
 * odometry reference point and the definition and origin of the user frame
 * are defined through the device settings interface. The source of this
 * message is identified by the source field, which is an integer ranging from
 * 0 to 255. The timestamp associated with this message should represent the
 * time when the accumulated tick count reached the value given by the
 * contents of this message as accurately as possible. If using "local CPU
 * time" time tags, the receiving end will expect a `MSG_GNSS_TIME_OFFSET`
 * when a PVT fix becomes available to synchronise wheeltick measurements with
 * GNSS. Local CPU time shall roll over to zero after one week.
 */
message MsgWheeltick {
    uint64 time = 1;
    uint32 flags = 2;
    uint32 source = 3;
    sint32 ticks = 4;
}