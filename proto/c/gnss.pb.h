/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev at Tue Mar 13 13:32:36 2018. */

#ifndef PB_SWIFTNAV_SBP_GNSS_GNSS_PB_H_INCLUDED
#define PB_SWIFTNAV_SBP_GNSS_GNSS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _swiftnav_sbp_gnss_CarrierPhase {
    int32_t i;
    uint32_t f;
/* @@protoc_insertion_point(struct:swiftnav_sbp_gnss_CarrierPhase) */
} swiftnav_sbp_gnss_CarrierPhase;

typedef struct _swiftnav_sbp_gnss_GnssSignal {
    uint32_t sat;
    uint32_t code;
/* @@protoc_insertion_point(struct:swiftnav_sbp_gnss_GnssSignal) */
} swiftnav_sbp_gnss_GnssSignal;

typedef struct _swiftnav_sbp_gnss_GpsTime {
    uint32_t tow;
    int32_t ns_residual;
    uint32_t wn;
/* @@protoc_insertion_point(struct:swiftnav_sbp_gnss_GpsTime) */
} swiftnav_sbp_gnss_GpsTime;

typedef struct _swiftnav_sbp_gnss_GpsTimeSec {
    uint32_t tow;
    uint32_t wn;
/* @@protoc_insertion_point(struct:swiftnav_sbp_gnss_GpsTimeSec) */
} swiftnav_sbp_gnss_GpsTimeSec;

/* Default values for struct fields */

/* Initializer values for message structs */
#define swiftnav_sbp_gnss_GnssSignal_init_default {0, 0}
#define swiftnav_sbp_gnss_GpsTimeSec_init_default {0, 0}
#define swiftnav_sbp_gnss_GpsTime_init_default   {0, 0, 0}
#define swiftnav_sbp_gnss_CarrierPhase_init_default {0, 0}
#define swiftnav_sbp_gnss_GnssSignal_init_zero   {0, 0}
#define swiftnav_sbp_gnss_GpsTimeSec_init_zero   {0, 0}
#define swiftnav_sbp_gnss_GpsTime_init_zero      {0, 0, 0}
#define swiftnav_sbp_gnss_CarrierPhase_init_zero {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define swiftnav_sbp_gnss_CarrierPhase_i_tag     1
#define swiftnav_sbp_gnss_CarrierPhase_f_tag     2
#define swiftnav_sbp_gnss_GnssSignal_sat_tag     1
#define swiftnav_sbp_gnss_GnssSignal_code_tag    2
#define swiftnav_sbp_gnss_GpsTime_tow_tag        1
#define swiftnav_sbp_gnss_GpsTime_ns_residual_tag 2
#define swiftnav_sbp_gnss_GpsTime_wn_tag         3
#define swiftnav_sbp_gnss_GpsTimeSec_tow_tag     1
#define swiftnav_sbp_gnss_GpsTimeSec_wn_tag      2

/* Struct field encoding specification for nanopb */
extern const pb_field_t swiftnav_sbp_gnss_GnssSignal_fields[3];
extern const pb_field_t swiftnav_sbp_gnss_GpsTimeSec_fields[3];
extern const pb_field_t swiftnav_sbp_gnss_GpsTime_fields[4];
extern const pb_field_t swiftnav_sbp_gnss_CarrierPhase_fields[3];

/* Maximum encoded size of messages (where known) */
#define swiftnav_sbp_gnss_GnssSignal_size        12
#define swiftnav_sbp_gnss_GpsTimeSec_size        12
#define swiftnav_sbp_gnss_GpsTime_size           18
#define swiftnav_sbp_gnss_CarrierPhase_size      12

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define GNSS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
