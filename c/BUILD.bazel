load("@rules_swiftnav//cc:defs2.bzl", "UNIT", "swift_prod_portable_c_library", "swift_new_cc_test")

SBP_INCLUDE = glob(["include/**/*.h"])

SBP_INCLUDE_INTERNAL = glob(["src/**/*.h"])

swift_prod_portable_c_library(
    name = "sbp",
    srcs = [
        "src/edc.c",
        "src/sbp.c",
        "src/string/sbp_string.c",
        "src/string/multipart.c",
        "src/string/null_terminated.c",
        "src/string/double_null_terminated.c",
        "src/string/unterminated.c",
        # generated files
        "src/acquisition.c",
        "src/bootload.c",
        "src/ext_events.c",
        "src/file_io.c",
        "src/flash.c",
        "src/gnss.c",
        "src/imu.c",
        "src/integrity.c",
        "src/linux.c",
        "src/logging.c",
        "src/mag.c",
        "src/navigation.c",
        "src/ndb.c",
        "src/observation.c",
        "src/orientation.c",
        "src/piksi.c",
        "src/profiling.c",
        "src/sbas.c",
        "src/settings.c",
        "src/signing.c",
        "src/solution_meta.c",
        "src/ssr.c",
        "src/system.c",
        "src/telemetry.c",
        "src/tracking.c",
        "src/user.c",
        "src/vehicle.c",
    ],
    hdrs = SBP_INCLUDE + SBP_INCLUDE_INTERNAL,
    local_includes = [
        "src/include",
    ],
    includes = [
        "include",
    ],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "sbp_headers",
    srcs = SBP_INCLUDE,
    visibility = ["//visibility:public"],
)

SBP_C_SOURCES = glob(["test/auto*.c"])

swift_new_cc_test(
    name = "sbp-test",
    srcs = [
        "test/check_main.c",
        "test/check_edc.c",
        "test/check_sbp.c",
        "test/check_bitfield_macros.c",
        "test/check_suites.h",
    ] + SBP_C_SOURCES,
    includes = ["include/libsbp"],
    type = UNIT,
    deps = [
        ":sbp",
        "@check",
    ],
)

SBP_CPP_C_SOURCES = glob(["test/cpp/auto*.cc"])

swift_new_cc_test(
    name = "sbp-cpp-test",
    srcs = SBP_CPP_C_SOURCES,
    type = UNIT,
    deps = [
        ":sbp",
        "@gtest//:gtest_main",
    ],
)

swift_new_cc_test(
    name = "sbp-string-test",
    srcs = [
        "test/string/test_double_null_terminated.cc",
        "test/string/test_multipart.cc",
        "test/string/test_null_terminated.cc",
        "test/string/test_unterminated.cc",
    ],
    includes = [
        "src/include",
    ],
    type = UNIT,
    deps = [
        ":sbp",
        "@gtest//:gtest_main",
    ],
)

