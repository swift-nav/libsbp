name: Rust

on:
  push:
    tags:
      - "*"
  pull_request:
    paths:
      - "rust/**"
jobs:
  lint:
    name: Format and lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - run: ./scripts/ci_prepare_rust.bash
        shell: bash

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - uses: actions-rs/cargo@v1
        name: Format Check
        with:
          command: fmt
          args: -- --check

  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - run: ./scripts/ci_prepare_rust.bash
        shell: bash

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run tests
        run: make test-rust

  build:
    name: Build binaries
    needs:
      - lint
      - test
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - run: ./scripts/ci_prepare_rust.bash
        shell: bash

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build ${{ matrix.os }} binaries
        id: build
        run: ./scripts/ci_build_rust.bash
        shell: bash

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.build.outputs.artifact_name }}
          path: ${{ steps.build.outputs.artifact_name }}

  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - build
    name: Publish github release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Show artifacts
        run: ls -R
        working-directory: artifacts

      - name: Upload Release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "@(artifacts/**/*.zip|artifacts/**/*.tar.gz)"
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
