# Copyright (C) 2015-2023 Swift Navigation Inc.
# Contact: https://support.swiftnav.com
#
# This source is subject to the license found in the file 'LICENSE' which must
# be be distributed together with this source. All other rights reserved.
#
# THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
# EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
#
# Test cases automatically generated from (((s.src_filename)))
# with generate.py.  Do not modify by hand!

import kaitai.python.sbp as kaitai_sbp
from kaitai.python.tests.utils import snake_case_keys, dictify
from kaitai.python.tests.utils_kaitai import get_payload
from kaitaistruct import KaitaiStream
import io
import base64


((*- macro stringify_field(name, value) *))((*- if name == "payload" *))"(((value)))"((*- else *))(((value)))((*- endif *))((*- endmacro *))
((*- macro stringify_fieldskeys(value) *))((*- if value is string_type *))(((value|str_escape)))((*- else *))(((value)))((*- endif *))((*- endmacro *))

((*- for t in s.tests *))

def test_(((s.suite_name|snake_case)))_(((loop.index)))():
    buf = base64.standard_b64decode("(((t.raw_packet)))")

    stream = KaitaiStream(io.BytesIO(buf))
    payload = kaitai_sbp.Sbp.SbpMessage(stream).get_payload()

    parsed_dict = dictify(payload)
    orig_dict = (((t.raw_json)))

  ((*- for k in t.sbp *))
    assert parsed_dict['(((k)))'] == (((stringify_field( (((k))), (((t.sbp[k]))) ))))
  ((*- endfor *))

  ((*- for f in t.fieldskeys *))
    assert dictify(obj.payload.(((f | snake_case)))) == snake_case_keys( (((stringify_fieldskeys( (((t.fields[f]))) )))) )
  ((*- endfor *))

    assert parsed_dict == snake_case_keys(orig_dict)

((*- endfor *))
